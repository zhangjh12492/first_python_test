print(1 > 2)

# a = 0011 1100
#
# b = 0000 1101

# -----------------

# a&b = 0000 1100
#
# a|b = 0011 1101
#
# a^b = 0011 0001
#
# ~a  = 1100 0011


# &	按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0	(a & b) 输出结果 12 ，二进制解释： 0000 1100
# |	按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。	(a | b) 输出结果 61 ，二进制解释： 0011 1101
# ^	按位异或运算符：当两对应的二进位相异时，结果为1	(a ^ b) 输出结果 49 ，二进制解释： 0011 0001
# ~	按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。~x 类似于 -x-1	(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。
# <<	左移动运算符：运算数的各二进位全部左移若干位，由"<<"右边的数指定移动的位数，高位丢弃，低位补0。	a << 2 输出结果 240 ，二进制解释： 1111 0000
# >>	右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，">>"右边的数指定移动的位数	a >> 2 输出结果 15 ，二进制解释： 0000 1111



# 2 进制是以 0b 开头的: 例如: 0b11 则表示十进制的 3
# 8 进制是以 0o 开头的: 例如: 0o11 则表示十进制的 9
# 16 进制是以 0x 开头的: 例如: 0x11 则表示十进制的 17

# 于是又去找了怎么输出二进制，得到了以下内容：
# 分别使用 bin，oct，hex 可输出数字的二进制，八进制，十六进制形式，例如：
# >>> a=0b111100
# >>> a=60
# >>> bin(a)
# '0b111100'
# >>> oct(a)
# '0o74'
# >>> hex(a)
# '0x3c'


import math
from math import modf

x = 2
y = 3
print((x > y) - (x < y))

print(modf(333.44))
print(pow(3,3))
print(round(4.4444,2))
print(math.sqrt(4))


from random import *
print(range(9,10))
print(choice(range(10)))

print("-------random -------")
print(math.ceil(random() * 100))

print(randrange(0,435))

print("-------------shuffle--------------")
_list = [3333,444,5566,6343,23435,9343]
print(_list)
shuffle(_list)
print(_list)
shuffle(_list)
print(_list)

print(uniform(0,20))

print(round(10.5))
print(round(11.5))